"use strict";(self.webpackChunkdocusaur=self.webpackChunkdocusaur||[]).push([[940],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=u(n),m=r,h=s["".concat(o,".").concat(m)]||s[m]||p[m]||i;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3301:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return s}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],d={},o="ReducedPenaltyFacet",u={unversionedId:"Api Specification/facets/RewardFacets/ReducedPenaltyFacet",id:"Api Specification/facets/RewardFacets/ReducedPenaltyFacet",isDocsHomePage:!1,title:"ReducedPenaltyFacet",description:"The   implements the custom reward,withdraw, vaultWithdraw logic for the {ReducedPenaltyReward} NFT.",source:"@site/docs/Api Specification/facets/RewardFacets/ReducedPenaltyFacet.md",sourceDirName:"Api Specification/facets/RewardFacets",slug:"/Api Specification/facets/RewardFacets/ReducedPenaltyFacet",permalink:"/v0-proto/docs/Api Specification/facets/RewardFacets/ReducedPenaltyFacet",editUrl:"https://github.com/Sigmadex/v0-proto/docs/Api Specification/facets/RewardFacets/ReducedPenaltyFacet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ToolShedFacet",permalink:"/v0-proto/docs/Api Specification/facets/ToolShedFacet"},next:{title:"IDiamondCut",permalink:"/v0-proto/docs/Api Specification/interfaces/IDiamondCut"}},c=[{value:"Functions",id:"functions",children:[{value:"rPAddress",id:"rpaddress",children:[{value:"Declaration",id:"declaration",children:[],level:4},{value:"Modifiers:",id:"modifiers",children:[],level:4},{value:"Returns:",id:"returns",children:[],level:4}],level:3},{value:"rPReward",id:"rpreward",children:[{value:"Declaration",id:"declaration-1",children:[],level:4},{value:"Modifiers:",id:"modifiers-1",children:[],level:4},{value:"Args:",id:"args",children:[],level:4}],level:3},{value:"rPReductionAmount",id:"rpreductionamount",children:[{value:"Declaration",id:"declaration-2",children:[],level:4},{value:"Modifiers:",id:"modifiers-2",children:[],level:4},{value:"Args:",id:"args-1",children:[],level:4},{value:"Returns:",id:"returns-1",children:[],level:4}],level:3},{value:"rPWithdraw",id:"rpwithdraw",children:[{value:"Declaration",id:"declaration-3",children:[],level:4},{value:"Modifiers:",id:"modifiers-3",children:[],level:4},{value:"Args:",id:"args-2",children:[],level:4}],level:3},{value:"rPWithdrawVault",id:"rpwithdrawvault",children:[{value:"Declaration",id:"declaration-4",children:[],level:4},{value:"Modifiers:",id:"modifiers-4",children:[],level:4},{value:"Args:",id:"args-3",children:[],level:4}],level:3}],level:2}],p={toc:c};function s(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"reducedpenaltyfacet"},"ReducedPenaltyFacet"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The {ReducedPenaltyFacet}  implements the custom reward,withdraw, vaultWithdraw logic for the {ReducedPenaltyReward} NFT.")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"rpaddress"},"rPAddress"),(0,i.kt)("p",null,"the reduced Penalty Address is the address of the NFT"),(0,i.kt)("h4",{id:"declaration"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPAddress(\n  ) public returns (address)\n")),(0,i.kt)("h4",{id:"modifiers"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"address")),(0,i.kt)("td",{parentName:"tr",align:null},"location of NFT on blockchain")))),(0,i.kt)("h3",{id:"rpreward"},"rPReward"),(0,i.kt)("p",null,"reduced penalty reward is charged with minting the NFT and updating the diamonds internal state relative to this NFT."),(0,i.kt)("h4",{id:"declaration-1"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPReward(\n    address to,\n    address token,\n    uint256 amount\n  ) external onlyDiamond\n")),(0,i.kt)("h4",{id:"modifiers-1"},"Modifiers:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Modifier"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onlyDiamond")))),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"address of the user receiving the reward")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"token")),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"the underlying asset the reduced penalty provides (eg USDT)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"amount")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the amount of the underlying asset that the NFT can reduce")))),(0,i.kt)("h3",{id:"rpreductionamount"},"rPReductionAmount"),(0,i.kt)("p",null,"returns {RPAmount} for the nft id in question"),(0,i.kt)("h4",{id:"declaration-2"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPReductionAmount(\n    uint256 id\n  ) external returns (struct RPAmount)\n")),(0,i.kt)("h4",{id:"modifiers-2"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-1"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the nft id")))),(0,i.kt)("h4",{id:"returns-1"},"Returns:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"RPAmount")),(0,i.kt)("td",{parentName:"tr",align:null},"the amount of reduction it can provide in what token")))),(0,i.kt)("h3",{id:"rpwithdraw"},"rPWithdraw"),(0,i.kt)("p",null,"reduced Penalty Withdraw substitutes for the withdraw function of {TokenFarm} when withdrawing a {UserPosition} that has the {ReducedPenaltyReward} nft address associated with it.  Provides compensating the user the reduction amount in the even of an early withdraw"),(0,i.kt)("h4",{id:"declaration-3"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPWithdraw(\n    uint256 pid,\n    uint256 positionid\n  ) public\n")),(0,i.kt)("h4",{id:"modifiers-3"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-2"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the poolid of the pool in question")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"positionid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the position id in question, retreived from the array postion of {UserInfo}")))),(0,i.kt)("h3",{id:"rpwithdrawvault"},"rPWithdrawVault"),(0,i.kt)("p",null,"reduced Penalty Withdraw vaults substitutes the withdrawVault function in {SdexVaultFacet} in the event the {UserPosition} in {VaultUserInfo} has the reduced penalty nft address associated with it"),(0,i.kt)("h4",{id:"declaration-4"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPWithdrawVault(\n    uint256 positionid\n  ) external\n")),(0,i.kt)("h4",{id:"modifiers-4"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-3"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"positionid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the id of the associated position, found in the {UserPosition} array length - 1 of {VaultUserInfo}")))))}s.isMDXComponent=!0}}]);