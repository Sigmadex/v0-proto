"use strict";(self.webpackChunkdocusaur=self.webpackChunkdocusaur||[]).push([[891],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),p=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(d.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),c=p(n),m=r,k=c["".concat(d,".").concat(m)]||c[m]||s[m]||l;return n?a.createElement(k,i(i({ref:e},u),{},{components:n})):a.createElement(k,i({ref:e},u))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2186:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={},d="TokenFarmFacet",p={unversionedId:"Api Specification/facets/TokenFarmFacet",id:"Api Specification/facets/TokenFarmFacet",isDocsHomePage:!1,title:"TokenFarmFacet",description:"Token Farm concerns creating and removing of positions from various created pools, as well as the associated getters for  and {PoolInfo}",source:"@site/docs/Api Specification/facets/TokenFarmFacet.md",sourceDirName:"Api Specification/facets",slug:"/Api Specification/facets/TokenFarmFacet",permalink:"v0-proto/docs/Api Specification/facets/TokenFarmFacet",editUrl:"https://github.com/Sigmadex/v0-proto/docs/Api Specification/facets/TokenFarmFacet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SdexVaultFacet",permalink:"v0-proto/docs/Api Specification/facets/SdexVaultFacet"},next:{title:"ToolShedFacet",permalink:"v0-proto/docs/Api Specification/facets/ToolShedFacet"}},u=[{value:"Functions",id:"functions",children:[{value:"add",id:"add",children:[{value:"Declaration",id:"declaration",children:[],level:4},{value:"Modifiers:",id:"modifiers",children:[],level:4},{value:"Args:",id:"args",children:[],level:4}],level:3},{value:"deposit",id:"deposit",children:[{value:"Declaration",id:"declaration-1",children:[],level:4},{value:"Modifiers:",id:"modifiers-1",children:[],level:4},{value:"Args:",id:"args-1",children:[],level:4}],level:3},{value:"withdraw",id:"withdraw",children:[{value:"Declaration",id:"declaration-2",children:[],level:4},{value:"Modifiers:",id:"modifiers-2",children:[],level:4},{value:"Args:",id:"args-2",children:[],level:4}],level:3},{value:"poolLength",id:"poollength",children:[{value:"Declaration",id:"declaration-3",children:[],level:4},{value:"Modifiers:",id:"modifiers-3",children:[],level:4},{value:"Returns:",id:"returns",children:[],level:4}],level:3},{value:"poolInfo",id:"poolinfo",children:[{value:"Declaration",id:"declaration-4",children:[],level:4},{value:"Modifiers:",id:"modifiers-4",children:[],level:4},{value:"Args:",id:"args-3",children:[],level:4},{value:"Returns:",id:"returns-1",children:[],level:4}],level:3},{value:"userInfo",id:"userinfo",children:[{value:"Declaration",id:"declaration-5",children:[],level:4},{value:"Modifiers:",id:"modifiers-5",children:[],level:4},{value:"Args:",id:"args-4",children:[],level:4},{value:"Returns:",id:"returns-2",children:[],level:4}],level:3}],level:2},{value:"Events",id:"events",children:[{value:"Deposit",id:"deposit-1",children:[],level:3},{value:"Withdraw",id:"withdraw-1",children:[],level:3}],level:2}],s={toc:u};function c(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"tokenfarmfacet"},"TokenFarmFacet"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Token Farm concerns creating and removing of positions from various created pools, as well as the associated getters for {UserInfo} and {PoolInfo}")),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"add"},"add"),(0,l.kt)("p",null,"Adds a new liquidity pool to the protocol"),(0,l.kt)("h4",{id:"declaration"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function add(\n    contract IERC20[] tokens,\n    uint256 allocPoint,\n    bool withUpdate\n  ) public onlyOwner\n")),(0,l.kt)("h4",{id:"modifiers"},"Modifiers:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Modifier"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onlyOwner")))),(0,l.kt)("h4",{id:"args"},"Args:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Arg"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tokens")),(0,l.kt)("td",{parentName:"tr",align:null},"contract IERC20[]"),(0,l.kt)("td",{parentName:"tr",align:null},"tokens to be added to the pool, can be one or many (only currently tested for max 2)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"allocPoint")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"allocation points for pool.  This determines what proportion of SDEX is given to this pool every block. allocPoint / TotalAllocPoint = proportion of sdexPerBlock")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"withUpdate")),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"runs the massUpdatePool option on execution to update all pool states")))),(0,l.kt)("h3",{id:"deposit"},"deposit"),(0,l.kt)("p",null,"Used to deposit a users tokens in a pool for a specific time. Opens up a position in the pool for the amounts given for the time staked.  Users with NFT rewards attach here."),(0,l.kt)("h4",{id:"declaration-1"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function deposit(\n    uint256 pid,\n    uint256[] amounts,\n    uint256 timeStake,\n    address nftReward,\n    uint256 nftid\n  ) public\n")),(0,l.kt)("h4",{id:"modifiers-1"},"Modifiers:"),(0,l.kt)("p",null,"No modifiers"),(0,l.kt)("h4",{id:"args-1"},"Args:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Arg"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"Pool Id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"amounts")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of amounts of each token, consult pool at pid for order and number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timeStake")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"amount of time in seconds to stake amounts in protocol")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"nftReward")),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address of nft reward token, address(0) for no NFT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"nftid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The id of the nft at the nft address, 0 for noNFT")))),(0,l.kt)("h3",{id:"withdraw"},"withdraw"),(0,l.kt)("p",null,"Withdraws a users tokens from a pool by position. Currently a no partial liquiditations are permitted, a withdraw before the stake time is subject to a penalty.  If only 50% of time has passed, only 50% of funds are returned, and all these tokens, and accrued SDEX is sent to the penalty pool as a gift for future stakers who complete their stakeTime.  Withdrawing after the stake time returns all tokens, accrued Sdex and an NFT gift from the penalty pool "),(0,l.kt)("h4",{id:"declaration-2"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function withdraw(\n    uint256 pid,\n    uint256 positionid\n  ) public\n")),(0,l.kt)("h4",{id:"modifiers-2"},"Modifiers:"),(0,l.kt)("p",null,"No modifiers"),(0,l.kt)("h4",{id:"args-2"},"Args:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Arg"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"pool id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"positionid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"id of position to withdraw")))),(0,l.kt)("h3",{id:"poollength"},"poolLength"),(0,l.kt)("p",null,"Getter function for the amount of pools in the protocol"),(0,l.kt)("h4",{id:"declaration-3"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function poolLength(\n  ) external returns (uint256)\n")),(0,l.kt)("h4",{id:"modifiers-3"},"Modifiers:"),(0,l.kt)("p",null,"No modifiers"),(0,l.kt)("h4",{id:"returns"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolLength")),(0,l.kt)("td",{parentName:"tr",align:null},"the amount of pools")))),(0,l.kt)("h3",{id:"poolinfo"},"poolInfo"),(0,l.kt)("p",null,"Getter function for the information of a pools"),(0,l.kt)("h4",{id:"declaration-4"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function poolInfo(\n    uint256 pid\n  ) external returns (struct PoolInfo)\n")),(0,l.kt)("h4",{id:"modifiers-4"},"Modifiers:"),(0,l.kt)("p",null,"No modifiers"),(0,l.kt)("h4",{id:"args-3"},"Args:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Arg"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"id for pool")))),(0,l.kt)("h4",{id:"returns-1"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"Information of the pools current state")))),(0,l.kt)("h3",{id:"userinfo"},"userInfo"),(0,l.kt)("p",null,"Returns the Information of a user based on a specific pool, positions are found here."),(0,l.kt)("h4",{id:"declaration-5"},"Declaration"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"  function userInfo(\n    uint256 pid,\n    address user\n  ) public returns (struct UserInfo)\n")),(0,l.kt)("h4",{id:"modifiers-5"},"Modifiers:"),(0,l.kt)("p",null,"No modifiers"),(0,l.kt)("h4",{id:"args-4"},"Args:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Arg"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pid")),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"the id of a pool")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"user")),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"address of the user")))),(0,l.kt)("h4",{id:"returns-2"},"Returns:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"UserInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"Information of the user")))),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"deposit-1"},"Deposit"),(0,l.kt)("p",null,"No description"),(0,l.kt)("h3",{id:"withdraw-1"},"Withdraw"),(0,l.kt)("p",null,"No description"))}c.isMDXComponent=!0}}]);