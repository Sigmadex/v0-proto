"use strict";(self.webpackChunkdocusaur=self.webpackChunkdocusaur||[]).push([[4978],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),u=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,h=p["".concat(o,".").concat(m)]||p[m]||s[m]||i;return a?r.createElement(h,l(l({ref:t},c),{},{components:a})):r.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=p;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:n,l[1]=d;for(var u=2;u<i;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1295:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],d={},o="ReducedPenaltyRewardFacet",u={unversionedId:"API Specification/facets/RewardFacets/ReducedPenaltyRewardFacet",id:"API Specification/facets/RewardFacets/ReducedPenaltyRewardFacet",isDocsHomePage:!1,title:"ReducedPenaltyRewardFacet",description:"The   implements the custom reward,withdraw, vaultWithdraw logic for the {ReducedPenaltyReward} NFT.",source:"@site/docs/API Specification/facets/RewardFacets/ReducedPenaltyRewardFacet.md",sourceDirName:"API Specification/facets/RewardFacets",slug:"/API Specification/facets/RewardFacets/ReducedPenaltyRewardFacet",permalink:"/v0-proto/docs/API Specification/facets/RewardFacets/ReducedPenaltyRewardFacet",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IncreasedBlockRewardFacet",permalink:"/v0-proto/docs/API Specification/facets/RewardFacets/IncreasedBlockRewardFacet"},next:{title:"RewardAmplifierRewardFacet",permalink:"/v0-proto/docs/API Specification/facets/RewardFacets/RewardAmplifierRewardFacet"}},c=[{value:"Functions",id:"functions",children:[{value:"rPRAddress",id:"rpraddress",children:[{value:"Declaration",id:"declaration",children:[],level:4},{value:"Modifiers:",id:"modifiers",children:[],level:4},{value:"Returns:",id:"returns",children:[],level:4}],level:3},{value:"rPRReward",id:"rprreward",children:[{value:"Declaration",id:"declaration-1",children:[],level:4},{value:"Modifiers:",id:"modifiers-1",children:[],level:4},{value:"Args:",id:"args",children:[],level:4}],level:3},{value:"rPRReductionAmount",id:"rprreductionamount",children:[{value:"Declaration",id:"declaration-2",children:[],level:4},{value:"Modifiers:",id:"modifiers-2",children:[],level:4},{value:"Args:",id:"args-1",children:[],level:4},{value:"Returns:",id:"returns-1",children:[],level:4}],level:3},{value:"rPRWithdraw",id:"rprwithdraw",children:[{value:"Declaration",id:"declaration-3",children:[],level:4},{value:"Modifiers:",id:"modifiers-3",children:[],level:4},{value:"Args:",id:"args-2",children:[],level:4}],level:3},{value:"rPRWithdrawVault",id:"rprwithdrawvault",children:[{value:"Declaration",id:"declaration-4",children:[],level:4},{value:"Modifiers:",id:"modifiers-4",children:[],level:4},{value:"Args:",id:"args-3",children:[],level:4}],level:3}],level:2},{value:"Events",id:"events",children:[{value:"RewardNFT",id:"rewardnft",children:[],level:3},{value:"WithdrawVault",id:"withdrawvault",children:[],level:3}],level:2}],s={toc:c};function p(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"reducedpenaltyrewardfacet"},"ReducedPenaltyRewardFacet"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The {ReducedPenaltyRewardFacet}  implements the custom reward,withdraw, vaultWithdraw logic for the {ReducedPenaltyReward} NFT.")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"rpraddress"},"rPRAddress"),(0,i.kt)("p",null,"the reduced Penalty Address is the address of the NFT"),(0,i.kt)("h4",{id:"declaration"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPRAddress(\n  ) public returns (address)\n")),(0,i.kt)("h4",{id:"modifiers"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"returns"},"Returns:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"address")),(0,i.kt)("td",{parentName:"tr",align:null},"location of NFT on blockchain")))),(0,i.kt)("h3",{id:"rprreward"},"rPRReward"),(0,i.kt)("p",null,"reduced penalty reward is charged with minting the NFT and updating the diamonds internal state relative to this NFT."),(0,i.kt)("h4",{id:"declaration-1"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPRReward(\n    address to,\n    address token,\n    uint256 amount\n  ) external onlyDiamond\n")),(0,i.kt)("h4",{id:"modifiers-1"},"Modifiers:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Modifier"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onlyDiamond")))),(0,i.kt)("h4",{id:"args"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"to")),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"address of the user receiving the reward")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"token")),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"the underlying asset the reduced penalty provides (eg USDT)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"amount")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the amount of the underlying asset that the NFT can reduce")))),(0,i.kt)("h3",{id:"rprreductionamount"},"rPRReductionAmount"),(0,i.kt)("p",null,"returns {RPRAmount} for the nft id in question"),(0,i.kt)("h4",{id:"declaration-2"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPRReductionAmount(\n    uint256 id\n  ) external returns (struct RPRAmount)\n")),(0,i.kt)("h4",{id:"modifiers-2"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-1"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the nft id")))),(0,i.kt)("h4",{id:"returns-1"},"Returns:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"RPRAmount")),(0,i.kt)("td",{parentName:"tr",align:null},"the amount of reduction it can provide in what token")))),(0,i.kt)("h3",{id:"rprwithdraw"},"rPRWithdraw"),(0,i.kt)("p",null,"reduced Penalty Withdraw substitutes for the withdraw function of {TokenFarm} when withdrawing a {UserPosition} that has the {ReducedPenaltyReward} nft address associated with it.  Provides compensating the user the reduction amount in the even of an early withdraw"),(0,i.kt)("h4",{id:"declaration-3"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPRWithdraw(\n    uint256 pid,\n    uint256 positionid\n  ) public\n")),(0,i.kt)("h4",{id:"modifiers-3"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-2"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the poolid of the pool in question")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"positionid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the position id in question, retreived from the array postion of {UserInfo}")))),(0,i.kt)("h3",{id:"rprwithdrawvault"},"rPRWithdrawVault"),(0,i.kt)("p",null,"reduced Penalty Withdraw vaults substitutes the withdrawVault function in {SdexVaultFacet} in the event the {UserPosition} in {VaultUserInfo} has the reduced penalty nft address associated with it"),(0,i.kt)("h4",{id:"declaration-4"},"Declaration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"  function rPRWithdrawVault(\n    uint256 positionid\n  ) external\n")),(0,i.kt)("h4",{id:"modifiers-4"},"Modifiers:"),(0,i.kt)("p",null,"No modifiers"),(0,i.kt)("h4",{id:"args-3"},"Args:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Arg"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"positionid")),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"the id of the associated position, found in the {UserPosition} array length - 1 of {VaultUserInfo}")))),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"rewardnft"},"RewardNFT"),(0,i.kt)("p",null,"No description"),(0,i.kt)("h3",{id:"withdrawvault"},"WithdrawVault"),(0,i.kt)("p",null,"No description"))}p.isMDXComponent=!0}}]);